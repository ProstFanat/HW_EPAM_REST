<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="qa" ignored="0" name="Surefire test" tests="73" failures="1" timestamp="17 Aug 2021 14:38:03 GMT" time="9.322" errors="0">
  <testcase name="testSearchBookBadRequest" time="2.571" classname="book.SearchBookTest"/>
  <testcase name="testSearchBookByName" time="0.594" classname="book.SearchBookTest"/>
  <testcase name="testSearchBookReturn5Results" time="0.575" classname="book.SearchBookTest"/>
  <testcase name="testDeleteBookBadRequest" time="0.535" classname="book.DeleteBookTest"/>
  <testcase name="testDeleteBookById" time="0.073" classname="book.DeleteBookTest"/>
  <testcase name="testDeleteBookNotFound" time="0.029" classname="book.DeleteBookTest"/>
  <testcase name="testSearchBookByAuthorAndGenre" time="0.015" classname="book.GetBookByAuthorAndGenreTest"/>
  <testcase name="testSearchBookByAuthorBadRequestAndGenre" time="0.027" classname="book.GetBookByAuthorAndGenreTest"/>
  <testcase name="testSearchBookByAuthorThatNotExistAndGenre" time="0.033" classname="book.GetBookByAuthorAndGenreTest"/>
  <testcase name="testSearchBookByGenreBadRequestAndAuthor" time="0.022" classname="book.GetBookByAuthorAndGenreTest"/>
  <testcase name="testSearchBookByGenreThatNotExistAndAuthor" time="0.03" classname="book.GetBookByAuthorAndGenreTest"/>
  <testcase name="testGetAllBooks" time="0.737" classname="book.GetAllBookOfSpecialGenreTest">
    <failure type="java.lang.AssertionError" message="expected [5] but found [355]">
      <![CDATA[java.lang.AssertionError: expected [5] but found [355]
at book.GetAllBookOfSpecialGenreTest.testGetAllBooks(GetAllBookOfSpecialGenreTest.java:40)
... Removed 35 stack frames]]>
    </failure>
  </testcase> <!-- testGetAllBooks -->
  <testcase name="testGetBooksWithBadPageNumber" time="0.057" classname="book.GetAllBookOfSpecialGenreTest"/>
  <testcase name="testGetBooksWithBadPaginationValue" time="0.039" classname="book.GetAllBookOfSpecialGenreTest"/>
  <testcase name="testGetBookBadRequest" time="0.027" classname="book.GetBookTest"/>
  <testcase name="testGetBookById" time="0.215" classname="book.GetBookTest"/>
  <testcase name="testGetBookNotFound" time="0.042" classname="book.GetBookTest"/>
  <testcase name="testSearchBookByAuthor" time="0.013" classname="book.GetBookByAuthorTest"/>
  <testcase name="testSearchBookByAuthorBadRequest" time="0.056" classname="book.GetBookByAuthorTest"/>
  <testcase name="testSearchBookByAuthorThatNotExist" time="0.046" classname="book.GetBookByAuthorTest"/>
  <testcase name="testGetAllBooks" time="0.026" classname="book.GetAllBooksTest"/>
  <testcase name="testGetBooksWithBadPageNumber" time="0.048" classname="book.GetAllBooksTest"/>
  <testcase name="testGetBooksWithBadPaginationValue" time="0.055" classname="book.GetAllBooksTest"/>
  <testcase name="testPositiveUpdateBook" time="0.049" classname="book.UpdateBookTest"/>
  <testcase name="testUpdateBookThatNotFound" time="0.063" classname="book.UpdateBookTest"/>
  <testcase name="testUpdateBookWithoutBody" time="0.071" classname="book.UpdateBookTest"/>
  <testcase name="testCreateAuthorWithExistsId" time="0.045" classname="book.CreateBookTest"/>
  <testcase name="testCreateAuthorWithoutBody" time="0.04" classname="book.CreateBookTest"/>
  <testcase name="testPositiveScenario" time="0.05" classname="book.CreateBookTest"/>
  <testcase name="testCreateAuthorWithExistsId" time="0.025" classname="genre.CreateGenreTest"/>
  <testcase name="testCreateAuthorWithoutBody" time="0.02" classname="genre.CreateGenreTest"/>
  <testcase name="testPositiveScenario" time="0.003" classname="genre.CreateGenreTest"/>
  <testcase name="testGetGenreBadRequest" time="0.025" classname="genre.GetGenreTest"/>
  <testcase name="testGetGenreById" time="0.023" classname="genre.GetGenreTest"/>
  <testcase name="testGetGenreNotFound" time="0.018" classname="genre.GetGenreTest"/>
  <testcase name="testDeleteGenreBadRequest" time="0.016" classname="genre.DeleteGenreTest"/>
  <testcase name="testDeleteGenreById" time="0.022" classname="genre.DeleteGenreTest"/>
  <testcase name="testDeleteGenreNotFound" time="0.025" classname="genre.DeleteGenreTest"/>
  <testcase name="testPositiveUpdateGenre" time="0.018" classname="genre.UpdateGenreTest"/>
  <testcase name="testUpdateGenreThatNotFound" time="0.048" classname="genre.UpdateGenreTest"/>
  <testcase name="testUpdateGenreWithoutBody" time="0.051" classname="genre.UpdateGenreTest"/>
  <testcase name="testSearchGenreByAuthor" time="0.013" classname="genre.GetGenreByAuthorTest"/>
  <testcase name="testSearchGenreByAuthorBadRequest" time="0.032" classname="genre.GetGenreByAuthorTest"/>
  <testcase name="testSearchGenreByAuthorThatNotExist" time="0.029" classname="genre.GetGenreByAuthorTest"/>
  <testcase name="testSearchGenreBadRequest" time="0.021" classname="genre.SearchGenreTest"/>
  <testcase name="testSearchGenreByName" time="0.002" classname="genre.SearchGenreTest"/>
  <testcase name="testGetAllGenres" time="0.011" classname="genre.GetAllGenresTest"/>
  <testcase name="testGetGenresWithBadPageNumber" time="0.026" classname="genre.GetAllGenresTest"/>
  <testcase name="testGetGenresWithBadPaginationValue" time="0.034" classname="genre.GetAllGenresTest"/>
  <testcase name="testDeleteAuthorBadRequest" time="0.037" classname="author.DeleteAuthorTest"/>
  <testcase name="testDeleteAuthorById" time="0.041" classname="author.DeleteAuthorTest"/>
  <testcase name="testDeleteAuthorNotFound" time="0.021" classname="author.DeleteAuthorTest"/>
  <testcase name="testSearchAuthorByBook" time="0.012" classname="author.GetAuthorByBookTest"/>
  <testcase name="testSearchAuthorByBookBadRequest" time="0.042" classname="author.GetAuthorByBookTest"/>
  <testcase name="testSearchAuthorByBookThatNotExist" time="0.022" classname="author.GetAuthorByBookTest"/>
  <testcase name="testGetAuthorBadRequest" time="0.017" classname="author.GetAuthorTest"/>
  <testcase name="testGetAuthorById" time="0.028" classname="author.GetAuthorTest"/>
  <testcase name="testGetAuthorNotFound" time="0.017" classname="author.GetAuthorTest"/>
  <testcase name="testCreateAuthorWithExistsId" time="0.028" classname="author.CreateAuthorTest"/>
  <testcase name="testCreateAuthorWithoutBody" time="0.022" classname="author.CreateAuthorTest"/>
  <testcase name="testPositiveScenario" time="0.002" classname="author.CreateAuthorTest"/>
  <testcase name="testSearchAuthorByGenre" time="0.016" classname="author.GetAuthorByGenreTest"/>
  <testcase name="testSearchAuthorByGenreBadRequest" time="0.023" classname="author.GetAuthorByGenreTest"/>
  <testcase name="testSearchAuthorByGenreThatNotExist" time="0.021" classname="author.GetAuthorByGenreTest"/>
  <testcase name="testSearchAuthorBadRequest" time="0.028" classname="author.SearchAuthorTest"/>
  <testcase name="testSearchAuthorByFirstName" time="0.016" classname="author.SearchAuthorTest"/>
  <testcase name="testSearchAuthorByLastName" time="0.018" classname="author.SearchAuthorTest"/>
  <testcase name="testPositiveUpdateAuthor" time="0.01" classname="author.UpdateAuthorTest"/>
  <testcase name="testUpdateAuthorWithoutBody" time="0.038" classname="author.UpdateAuthorTest"/>
  <testcase name="testUpdateUserThatNotFound" time="0.024" classname="author.UpdateAuthorTest"/>
  <testcase name="testGetAllAuthors" time="0.026" classname="author.GetAllAuthorsTest"/>
  <testcase name="testGetAuthorsWithBadPageNumber" time="0.02" classname="author.GetAllAuthorsTest"/>
  <testcase name="testGetAuthorsWithBadPaginationValue" time="0.027" classname="author.GetAllAuthorsTest"/>
</testsuite> <!-- Surefire test -->
